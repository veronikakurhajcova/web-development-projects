{"version":3,"sources":["main.js"],"names":["select","el","all","arguments","length","undefined","trim","_toConsumableArray","document","querySelectorAll","querySelector","on","type","listener","selectEl","addEventListener","position","window","scrollY","navbarlinks","forEach","navbarlink","hash","section","offsetTop","offsetHeight","classList","add","onscroll","navbarlinksActive","top","behavior","backtotop","toggleBacktotop","remove","scrollto","e","toggle","this","body","contains","navbarToggle","location","typed","getAttribute","typed_strings","split","loop","typeSpeed","backDelay","backSpeed","Isotope","portfolioContainer","itemSelector","portfolioFilters","preventDefault","portfolioIsotope","arrange","filter","AOS","refresh","GLightbox","selector","autoplay","delay","pagination","clickable","portfolioLightbox","duration","easing","once","mirror","disableOnInteraction","myTags","TagCloud","maxSpeed","initSpeed","direction","keep","modal","getElementById","btn","span","getElementsByClassName","onclick","style","display","event","target"],"mappings":"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","file":"main.min.js","sourcesContent":["\r\n(function() {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Easy selector helper function\r\n   */\r\n  const select = (el, all = false) => {\r\n    el = el.trim()\r\n    if (all) {\r\n      return [...document.querySelectorAll(el)]\r\n    } else {\r\n      return document.querySelector(el)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy event listener function\r\n   */\r\n  const on = (type, el, listener, all = false) => {\r\n    let selectEl = select(el, all)\r\n    if (selectEl) {\r\n      if (all) {\r\n        selectEl.forEach(e => e.addEventListener(type, listener))\r\n      } else {\r\n        selectEl.addEventListener(type, listener)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy on scroll event listener \r\n   */\r\n  const onscroll = (el, listener) => {\r\n    el.addEventListener('scroll', listener)\r\n  }\r\n\r\n  /**\r\n   * Navbar links active state on scroll\r\n   */\r\n  let navbarlinks = select('#navbar .scrollto', true)\r\n  const navbarlinksActive = () => {\r\n    let position = window.scrollY + 200\r\n    navbarlinks.forEach(navbarlink => {\r\n      if (!navbarlink.hash) return\r\n      let section = select(navbarlink.hash)\r\n      if (!section) return\r\n      if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {\r\n        navbarlink.classList.add('active')\r\n      } else {\r\n        navbarlink.classList.remove('active')\r\n      }\r\n    })\r\n  }\r\n  window.addEventListener('load', navbarlinksActive)\r\n  onscroll(document, navbarlinksActive)\r\n\r\n  /**\r\n   * Scrolls to an element with header offset\r\n   */\r\n  const scrollto = (el) => {\r\n    let elementPos = select(el).offsetTop\r\n    window.scrollTo({\r\n      top: elementPos,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Back to top button\r\n   */\r\n  let backtotop = select('.back-to-top')\r\n  if (backtotop) {\r\n    const toggleBacktotop = () => {\r\n      if (window.scrollY > 100) {\r\n        backtotop.classList.add('active')\r\n      } else {\r\n        backtotop.classList.remove('active')\r\n      }\r\n    }\r\n    window.addEventListener('load', toggleBacktotop)\r\n    onscroll(document, toggleBacktotop)\r\n  }\r\n\r\n  /**\r\n   * Mobile nav toggle\r\n   */\r\n  on('click', '.mobile-nav-toggle', function(e) {\r\n    select('body').classList.toggle('mobile-nav-active')\r\n    this.classList.toggle('bi-list')\r\n    this.classList.toggle('bi-x')\r\n  })\r\n\r\n  /**\r\n   * Scrool with ofset on links with a class name .scrollto\r\n   */\r\n  on('click', '.scrollto', function(e) {\r\n    if (select(this.hash)) {\r\n      e.preventDefault()\r\n\r\n      let body = select('body')\r\n      if (body.classList.contains('mobile-nav-active')) {\r\n        body.classList.remove('mobile-nav-active')\r\n        let navbarToggle = select('.mobile-nav-toggle')\r\n        navbarToggle.classList.toggle('bi-list')\r\n        navbarToggle.classList.toggle('bi-x')\r\n      }\r\n      scrollto(this.hash)\r\n    }\r\n  }, true)\r\n\r\n  /**\r\n   * Scroll with ofset on page load with hash links in the url\r\n   */\r\n  window.addEventListener('load', () => {\r\n    if (window.location.hash) {\r\n      if (select(window.location.hash)) {\r\n        scrollto(window.location.hash)\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Hero type effect\r\n   */\r\n  const typed = select('.typed')\r\n  if (typed) {\r\n    let typed_strings = typed.getAttribute('data-typed-items')\r\n    typed_strings = typed_strings.split(',')\r\n    new Typed('.typed', {\r\n      strings: typed_strings,\r\n      loop: true,\r\n      typeSpeed: 100,\r\n      backSpeed: 50,\r\n      backDelay: 2000\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Skills animation\r\n   */\r\n  // let skilsContent = select('.skills-content');\r\n  // if (skilsContent) {\r\n  //   new Waypoint({\r\n  //     element: skilsContent,\r\n  //     offset: '80%',\r\n  //     handler: function(direction) {\r\n  //       let progress = select('.progress .progress-bar', true);\r\n  //       progress.forEach((el) => {\r\n  //         el.style.width = el.getAttribute('aria-valuenow') + '%'\r\n  //       });\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  /**\r\n   * Porfolio isotope and filter\r\n   */\r\n  window.addEventListener('load', () => {\r\n    let portfolioContainer = select('.portfolio-container');\r\n    if (portfolioContainer) {\r\n      let portfolioIsotope = new Isotope(portfolioContainer, {\r\n        itemSelector: '.portfolio-item'\r\n      });\r\n\r\n      let portfolioFilters = select('#portfolio-flters li', true);\r\n\r\n      on('click', '#portfolio-flters li', function(e) {\r\n        e.preventDefault();\r\n        portfolioFilters.forEach(function(el) {\r\n          el.classList.remove('filter-active');\r\n        });\r\n        this.classList.add('filter-active');\r\n\r\n        portfolioIsotope.arrange({\r\n          filter: this.getAttribute('data-filter')\r\n        });\r\n        portfolioIsotope.on('arrangeComplete', function() {\r\n          AOS.refresh()\r\n        });\r\n      }, true);\r\n    }\r\n\r\n  });\r\n\r\n  /**\r\n   * Initiate portfolio lightbox \r\n   */\r\n  const portfolioLightbox = GLightbox({\r\n    selector: '.portfolio-lightbox'\r\n  });\r\n\r\n  /**\r\n   * Portfolio details slider\r\n   */\r\n  new Swiper('.portfolio-details-slider', {\r\n    speed: 400,\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 5000,\r\n      disableOnInteraction: false\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      type: 'bullets',\r\n      clickable: true\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * Animation on scroll\r\n   */\r\n  window.addEventListener('load', () => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      easing: 'ease-in-out',\r\n      once: true,\r\n      mirror: false\r\n    })\r\n  });\r\n\r\n  /**\r\n   * Initiate Pure Counter \r\n   */\r\n  new PureCounter();\r\n\r\n})()\r\n\r\n /**\r\n   * Sphera\r\n   */\r\nconst myTags = [\r\n  'HTML', 'CSS', 'Javascript', 'Sass', 'Bootstrap',\r\n  'Tailwind', 'Vue', 'Git', 'SQL', 'jQuery',\r\n  'MVC', 'Figma', 'Canva', 'RWD', 'Shoptet',\r\n];\r\n\r\nvar tagCloud = TagCloud('.content-sphera', myTags,{\r\n\r\n// radius in px\r\nradius: 250,\r\n\r\n// animation speed\r\n// slow, normal, fast\r\nmaxSpeed: 'slow',\r\ninitSpeed: 'slow',\r\n\r\n// 0 = top\r\n// 90 = left\r\n// 135 = right-bottom\r\ndirection: 135,\r\n\r\n// interact with cursor move on mouse out\r\nkeep: true\r\n\r\n});\r\n\r\n//To change the color of text randomly\r\n// var colors = ['#0c1c2c', '#528212', '#d4849a'];\r\n// var random_color = colors[Math.floor(Math.random() * colors.length)];\r\n// document.querySelector('.tagcloud').style.color = random_color;\r\n\r\n\r\n/** \r\n*Modal\r\n*/\r\n// Get the modal\r\nvar modal = document.getElementById(\"myModal\");\r\n\r\n// Get the button that opens the modal\r\nvar btn = document.getElementById(\"myBtn\");\r\n\r\n// Get the <span> element that closes the modal\r\nvar span = document.getElementsByClassName(\"close\")[0];\r\n\r\n// When the user clicks the button, open the modal \r\nbtn.onclick = function() {\r\n  modal.style.display = \"block\";\r\n}\r\n\r\n// When the user clicks on <span> (x), close the modal\r\nspan.onclick = function() {\r\n  modal.style.display = \"none\";\r\n}\r\n\r\n// When the user clicks anywhere outside of the modal, close it\r\nwindow.onclick = function(event) {\r\n  if (event.target == modal) {\r\n    modal.style.display = \"none\";\r\n  }\r\n}"]}